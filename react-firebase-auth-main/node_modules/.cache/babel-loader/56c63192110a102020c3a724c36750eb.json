{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colorSchemes\"],\n      _excluded2 = [\"palette\"];\nimport { deepmerge } from '@mui/utils';\nimport { colorChannel } from '@mui/system';\nimport createThemeWithoutVars from './createTheme';\nimport { getOverlayAlpha } from '../Paper/Paper';\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\n  if (index === 0) {\n    return undefined;\n  }\n\n  const overlay = getOverlayAlpha(index);\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\n});\nexport default function extendTheme(options = {}, ...args) {\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\n\n  const {\n    colorSchemes: colorSchemesInput = {}\n  } = options,\n        input = _objectWithoutPropertiesLoose(options, _excluded);\n\n  const _createThemeWithoutVa = createThemeWithoutVars(_extends({}, input, colorSchemesInput.light && {\n    palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\n  })),\n        {\n    palette: lightPalette\n  } = _createThemeWithoutVa,\n        muiTheme = _objectWithoutPropertiesLoose(_createThemeWithoutVa, _excluded2);\n\n  const {\n    palette: darkPalette\n  } = createThemeWithoutVars({\n    palette: _extends({\n      mode: 'dark'\n    }, (_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\n  });\n\n  let theme = _extends({}, muiTheme, {\n    colorSchemes: _extends({}, colorSchemesInput, {\n      light: _extends({}, colorSchemesInput.light, {\n        palette: lightPalette,\n        opacity: _extends({\n          placeholder: 0.42,\n          inputTouchBottomLine: 0.42\n        }, (_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity),\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\n      }),\n      dark: _extends({}, colorSchemesInput.dark, {\n        palette: darkPalette,\n        opacity: _extends({\n          placeholder: 0.5,\n          inputTouchBottomLine: 0.7\n        }, (_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity),\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\n      })\n    })\n  });\n\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette; // attach black & white channels to common node\n\n    if (key === 'dark') {\n      palette.common.background = palette.common.background || '#000';\n      palette.common.onBackground = palette.common.onBackground || '#fff';\n    } else {\n      palette.common.background = palette.common.background || '#fff';\n      palette.common.onBackground = palette.common.onBackground || '#000';\n    }\n\n    palette.common.backgroundChannel = colorChannel(palette.common.background);\n    palette.common.onBackgroundChannel = colorChannel(palette.common.onBackground);\n    palette.dividerChannel = colorChannel(palette.divider); // special token for Tooltip\n    // TODO: consider adding `main`, and `light` to palette.grey to make it consistent.\n\n    if (!palette.grey.dark) {\n      palette.grey.dark = palette.grey[700];\n    }\n\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color]; // Color palettes: primary, secondary, error, info, success, and warning\n\n      if (colors.main) {\n        palette[color].mainChannel = colorChannel(colors.main);\n      }\n\n      if (colors.light) {\n        palette[color].lightChannel = colorChannel(colors.light);\n      }\n\n      if (colors.dark) {\n        palette[color].darkChannel = colorChannel(colors.dark);\n      }\n\n      if (colors.contrastText) {\n        palette[color].contrastTextChannel = colorChannel(colors.contrastText);\n      } // Text colors: text.primary, text.secondary\n\n\n      if (colors.primary) {\n        palette[color].primaryChannel = colorChannel(colors.primary);\n      }\n\n      if (colors.secondary) {\n        palette[color].secondaryChannel = colorChannel(colors.secondary);\n      } // Action colors: action.activeChannel\n\n\n      if (colors.active) {\n        palette[color].activeChannel = colorChannel(colors.active);\n      }\n    });\n  });\n  theme = args.reduce((acc, argument) => deepmerge(acc, argument), theme);\n  return theme;\n}","map":{"version":3,"sources":["D:/WorkSpace/react-firebase-auth-main/react-firebase-auth-main/node_modules/@mui/material/styles/experimental_extendTheme.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","deepmerge","colorChannel","createThemeWithoutVars","getOverlayAlpha","defaultDarkOverlays","Array","map","_","index","undefined","overlay","extendTheme","options","args","_colorSchemesInput$li","_colorSchemesInput$da","_colorSchemesInput$li2","_colorSchemesInput$li3","_colorSchemesInput$da2","_colorSchemesInput$da3","colorSchemes","colorSchemesInput","input","_createThemeWithoutVa","light","palette","lightPalette","muiTheme","darkPalette","mode","dark","theme","opacity","placeholder","inputTouchBottomLine","overlays","Object","keys","forEach","key","common","background","onBackground","backgroundChannel","onBackgroundChannel","dividerChannel","divider","grey","color","colors","main","mainChannel","lightChannel","darkChannel","contrastText","contrastTextChannel","primary","primaryChannel","secondary","secondaryChannel","active","activeChannel","reduce","acc","argument"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colorSchemes\"],\n      _excluded2 = [\"palette\"];\nimport { deepmerge } from '@mui/utils';\nimport { colorChannel } from '@mui/system';\nimport createThemeWithoutVars from './createTheme';\nimport { getOverlayAlpha } from '../Paper/Paper';\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\n  if (index === 0) {\n    return undefined;\n  }\n\n  const overlay = getOverlayAlpha(index);\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\n});\nexport default function extendTheme(options = {}, ...args) {\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\n\n  const {\n    colorSchemes: colorSchemesInput = {}\n  } = options,\n        input = _objectWithoutPropertiesLoose(options, _excluded);\n\n  const _createThemeWithoutVa = createThemeWithoutVars(_extends({}, input, colorSchemesInput.light && {\n    palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\n  })),\n        {\n    palette: lightPalette\n  } = _createThemeWithoutVa,\n        muiTheme = _objectWithoutPropertiesLoose(_createThemeWithoutVa, _excluded2);\n\n  const {\n    palette: darkPalette\n  } = createThemeWithoutVars({\n    palette: _extends({\n      mode: 'dark'\n    }, (_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\n  });\n\n  let theme = _extends({}, muiTheme, {\n    colorSchemes: _extends({}, colorSchemesInput, {\n      light: _extends({}, colorSchemesInput.light, {\n        palette: lightPalette,\n        opacity: _extends({\n          placeholder: 0.42,\n          inputTouchBottomLine: 0.42\n        }, (_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity),\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\n      }),\n      dark: _extends({}, colorSchemesInput.dark, {\n        palette: darkPalette,\n        opacity: _extends({\n          placeholder: 0.5,\n          inputTouchBottomLine: 0.7\n        }, (_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity),\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\n      })\n    })\n  });\n\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette; // attach black & white channels to common node\n\n    if (key === 'dark') {\n      palette.common.background = palette.common.background || '#000';\n      palette.common.onBackground = palette.common.onBackground || '#fff';\n    } else {\n      palette.common.background = palette.common.background || '#fff';\n      palette.common.onBackground = palette.common.onBackground || '#000';\n    }\n\n    palette.common.backgroundChannel = colorChannel(palette.common.background);\n    palette.common.onBackgroundChannel = colorChannel(palette.common.onBackground);\n    palette.dividerChannel = colorChannel(palette.divider); // special token for Tooltip\n    // TODO: consider adding `main`, and `light` to palette.grey to make it consistent.\n\n    if (!palette.grey.dark) {\n      palette.grey.dark = palette.grey[700];\n    }\n\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color]; // Color palettes: primary, secondary, error, info, success, and warning\n\n      if (colors.main) {\n        palette[color].mainChannel = colorChannel(colors.main);\n      }\n\n      if (colors.light) {\n        palette[color].lightChannel = colorChannel(colors.light);\n      }\n\n      if (colors.dark) {\n        palette[color].darkChannel = colorChannel(colors.dark);\n      }\n\n      if (colors.contrastText) {\n        palette[color].contrastTextChannel = colorChannel(colors.contrastText);\n      } // Text colors: text.primary, text.secondary\n\n\n      if (colors.primary) {\n        palette[color].primaryChannel = colorChannel(colors.primary);\n      }\n\n      if (colors.secondary) {\n        palette[color].secondaryChannel = colorChannel(colors.secondary);\n      } // Action colors: action.activeChannel\n\n\n      if (colors.active) {\n        palette[color].activeChannel = colorChannel(colors.active);\n      }\n    });\n  });\n  theme = args.reduce((acc, argument) => deepmerge(acc, argument), theme);\n  return theme;\n}"]},"metadata":{},"sourceType":"module"}